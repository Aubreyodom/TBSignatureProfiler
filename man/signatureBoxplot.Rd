% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{signatureBoxplot}
\alias{signatureBoxplot}
\title{Plot a Boxplot of Signature Genes}
\usage{
signatureBoxplot(inputData, annotationData, signatureColNames,
  annotationColName, name = "Signatures", scale = FALSE,
  includePoints = TRUE)
}
\arguments{
\item{inputData}{Either a SummarizedExperiment object that contains the
signature data and annotation as colData columns, or a data.frame or matrix
of signature data. Required.}

\item{annotationData}{If inputData is a data.frame or matrix of signature
data, a data.frame or matrix of annotation data.}

\item{signatureColNames}{If inputData is a SummarizedExperiment, the column
names in colData that contain the signature data.}

\item{annotationColName}{If inputData is a SummarizedExperiment, the column
name in colData to use to make the boxplot.}

\item{name}{The name of the boxplot. The default is "Signatures".}

\item{scale}{Scale the signature data. The default is FALSE.}

\item{includePoints}{Include points over the boxplots. The default is TRUE.}
}
\value{
A ggplot2 boxplot of the signature data using the annotation
provided.
}
\description{
Plot a Boxplot of Signature Genes
}
\examples{
library(SummarizedExperiment)
#generate some artificial data that shows a difference in Predict29
mat_testdata <- rbind(matrix(c(rnorm(145), rnorm(145) + 5), 29, 10,
                             dimnames = list(TBsignatures$Predict29,
                                             paste0("sample", 1:10))),
                      matrix(rnorm(1000), 100, 10,
                             dimnames = list(paste0("gene", 1:100),
                                             paste0("sample", 1:10))))
#Create a SummarizedExperiment object that contains the data
testdataSE <- SummarizedExperiment(assays=SimpleList(data = mat_testdata),
                                   colData=DataFrame(sample = c(rep("down", 5),
                                                                rep("up", 5))))
#Run profiler using GSVA and ssGSEA on Predict29
res <- runTBsigProfiler(testdataSE, useAssay = "data",
                        signatures = TBsignatures["Predict29"],
                        algorithm = c("GSVA", "ssGSEA"), parallel.sz = 1,
                        combineSigAndAlgorithm = TRUE)
#Plot boxplot of the results
signatureBoxplot(res, signatureColNames = c("GSVA_Predict29",
                                            "ssGSEA_Predict29"),
                 annotationColName = "sample", name = "Predict29 Signatures")
}
