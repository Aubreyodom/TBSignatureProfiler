% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{signatureHeatmap}
\alias{signatureHeatmap}
\title{Plot a Heatmap of Signature Genes}
\usage{
signatureHeatmap(inputData, annotationData, name = "Signatures",
  signatureColNames, annotationColNames, colList, scale = FALSE,
  showColumnNames = TRUE, showRowNames = TRUE, colorSets = c("Set1",
  "Set2", "Set3", "Pastel1", "Pastel2", "Accent", "Dark2", "Paired"))
}
\arguments{
\item{inputData}{Either a SummarizedExperiment object that contains the
signature data and annotation as colData columns, or a data.frame or matrix
of signature data. Required.}

\item{annotationData}{If inputData is a data.frame or matrix of signature
data, a data.frame or matrix of annotation data.}

\item{name}{The name of the heatmap. The default is "Signatures".}

\item{signatureColNames}{If inputData is a SummarizedExperiment, the column
names in colData that contain the signature data.}

\item{annotationColNames}{If inputData is a SummarizedExperiment, the column
names in colData that contain the annotation data.}

\item{colList}{Custom color information as a named list to pass to
ComplexHeatmap. By default, ColorBrewer color sets will be used. See
colorSets for additional options.}

\item{scale}{Scale the signature data. The default is FALSE.}

\item{showColumnNames}{Show columns names (sample names) in the heatmap. The
default is TRUE.}

\item{showRowNames}{Show row names(signature names) in the heatmap. The
default is TRUE.}

\item{colorSets}{By default, this function will use the color sets in the
order listed below for annotation information. Replace this with the sets
in order that you want to use them, or provide custom color sets with
colList.}
}
\value{
A ComplexHeatmap plot
}
\description{
Plot a Heatmap of Signature Genes
}
\examples{
mat_testdata <- rbind(matrix(c(rnorm(145), rnorm(145) + 5), 29, 10,
                             dimnames = list(TBsignatures$Predict29,
                             paste0("sample", 1:10))),
                      matrix(rnorm(1000), 100, 10,
                             dimnames = list(paste0("gene", 1:100),
                             paste0("sample", 1:10))))
res <- runTBsigProfiler(mat_testdata, algorithm = "GSVA", parallel.sz = 1)
}
